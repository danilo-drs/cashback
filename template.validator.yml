# This is the SAM template that represents the architecture of your serverless application
# https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-template-basics.html

# The AWSTemplateFormatVersion identifies the capabilities of the template
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/format-version-structure.html
AWSTemplateFormatVersion: 2010-09-09
Description: >-
  cashback

# Transform section specifies one or more macros that AWS CloudFormation uses to process your template
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-section-structure.html
Transform:
- AWS::Serverless-2016-10-31

Globals:
  Api:
    Cors:
      AllowOrigin: "'*'"
      AllowHeaders: "'Content-Type,Authorization'"
  Function:
    Tracing: Active
    Runtime: nodejs12.x


# Resources declares the AWS resources that you want to include in the stack
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/resources-section-structure.html
Resources:
  # Each Lambda function is defined by properties:
  # https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction


  CashBackApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: CashBackApi
      OpenApiVersion: "3.0.3"
      TracingEnabled: true
      StageName: v1
      Models:
        ResellerModel:
          Ref: ResellerModel
      # Auth:
      #   DefaultAuthorizer: RequestLambdaAuthorizer
      #   Authorizers:
      #     RequestLambdaAuthorizer:
      #       FunctionPayloadType: REQUEST
      #       FunctionArn: !GetAtt ApiLambdaAuthorizer.Arn
      #       Identity:
      #         ReauthorizeEvery: 300
      #         Headers:
      #           - Authorization


  RequestValidator:
    Type: AWS::ApiGateway::RequestValidator
    Properties:
      Name: RequestValidator
      RestApiId: !Ref CashBackApi
      ValidateRequestBody: True
      ValidateRequestParameters: True

  ResellerModel:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: CashBackApi
      ContentType: "application/json"
      Description: "Reseller Model"
      Name: ResellerModel
      Schema:
        "$schema": "http://json-schema.org/draft-04/schema#"
        title: ResellerModel
        type: object
        required:
          - name
          - cpf
          - email
          - password
        properties:
          name:
            type: string
            # pattern: '^[A-Za-zÀ-ÿ\'\"\`\´]+\s+[A-Za-zÀ-ÿ\'\"\`\´]+$'
          cpf:
            type: number
            maximum: 99999999999
          email:
            type: string
            format: email
          password:
            type: string




  # CashBackApi:
  #   Type: AWS::Serverless::Api
  #   Properties:
  #     StageName: v0
  #     Models:
  #       Reseller:
  #         type: object
  #         required:
  #           - name
  #           - cpf
  #           - email
  #           - password
  #         properties:
  #           name:
  #             type: string
  #             # pattern: '^[A-Za-zÀ-ÿ\'\"\`\´]+\s+[A-Za-zÀ-ÿ\'\"\`\´]+$'
  #           cpf:
  #             type: number
  #             maximum: 99999999999
  #           email:
  #             type: string
  #             format: email
  #           password:
  #             type: string


  postReseller:
      Type: AWS::Serverless::Function
      Properties:
        Handler: src/interface/handlers/post-reseller.handler
        MemorySize: 128
        Timeout: 100
        Description: creates an new Reseller.
        Policies:
          - AWSLambdaExecute
          - DynamoDBCrudPolicy:
              TableName: Reseller
        Environment:
          Variables:
            LOG_LEVEL: DEBUG
            RESELLER_TABLE_NAME: Reseller
        Events:
          Api:
            Type: Api
            Properties:
              Path: /Reseller
              Method: POST
              RestApiId: !Ref CashBackApi
              RequestValidatorId: !Ref RequestValidator
              RequestModel:
                Model: ResellerModel
                Required: true



  Method:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: POST
      ResourceId: !Ref postReseller
      RestApiId: !Ref CashBackApi
      AuthorizationType: NONE
      Integration:
        Type: MOCK
        ContentHandling: !Ref contentHandling
        IntegrationResponses:
          - ContentHandling: !Ref contentHandling
            StatusCode: 400
      RequestValidatorId: !Ref RequestValidator
      OperationName: testoperationName


  Resseler:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: ResselerId
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2

  Tikets:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: "ResselerId"
            AttributeType: "S"
          - AttributeName: "tiketCode"
            AttributeType: "S"
        KeySchema:
          - AttributeName: "ResselerId"
            KeyType: "HASH"
          - AttributeName: "tiketCode"
            KeyType: "RANGE"

  PreApproved:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: cpf
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2

Outputs:
    WebEndpoint:
      Description: "API Gateway endpoint URL for Prod stage"
      Value: "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
